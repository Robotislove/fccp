# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~tsp_solver
0.default= 3
0.type= int
0.desc=TSP solver Possible values are: NearestNeighbor (1): Use the nearest neighbor TSP algorithm., GeneticSolver (2): Use the genetic TSP algorithm., ConcordeSolver (3): Use the Concorde TSP algorithm.
1.name= ~problem_setting
1.default= 2
1.type= int
1.desc=Problem setting of the sequence planning problem Possible values are: SimpleOrderPlanning (1): Plan the optimal order of a simple set of locations., CheckpointBasedPlanning (2): Two-stage planning that creates local cliques of locations (= checkpoints) and determines the optimal order through the members of each clique as well as the optimal order through the cliques.
2.name= ~planning_method
2.default= 2
2.type= int
2.desc=Trolley placement method (only applies to CheckpointBasedPlanning problem) Possible values are: DragTrolleyWhenNecessary (1): Drag the trolley if it is too far away from next room., PrecomputeRoomGroupsAndCorrespondingTrolleyPosition (2): Put rooms together in groups and calculate a corresponding trolley positions.
3.name= ~max_clique_path_length
3.default= 12.0
3.type= double
3.desc=Max A* path length between two rooms that are assigned to the same clique, in [m] (only applies to CheckpointBasedPlanning problem) Range: 0.0 to std::numeric_limits<double>::infinity()
4.name= ~maximum_clique_size
4.default= 9001
4.type= int
4.desc=Maximal number of nodes belonging to one trolley clique (only applies to CheckpointBasedPlanning problem) Range: 0 to 2147483647
5.name= ~map_downsampling_factor
5.default= 0.25
5.type= double
5.desc=The map may be downsampled during computations (e.g. of A* path lengths) in order to speed up the algorithm, if set to 1 the map will have original size, if set to 0 the algorithm won't work Range: 1e-05 to 1.0
6.name= ~check_accessibility_of_rooms
6.default= True
6.type= bool
6.desc=Tells the sequence planner if it should check the given room centers for accessibility from the starting position 
7.name= ~return_sequence_map
7.default= False
7.type= bool
7.desc=Tells the server if the map with the sequence drawn in should be returned 
8.name= ~display_map
8.default= False
8.type= bool
8.desc=Show the resulting map with paths (only if return_sequence_map=true) 
}
}
# End of autogenerated section. You may edit below.
