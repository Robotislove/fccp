<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find clean_car_description)/world/room.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find clean_car_description)/urdf/clean_car.xacro'" /> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model clean_car -param robot_description"/> 
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find clean_car_description)/rviz/test.rviz" required="true" />

    <include file="$(find clean_car_description)/launch/simulatation_car/gmapping.launch" />
    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
    name="laser_scan_matcher_node" output="screen">

    <param name="fixed_frame" value = "laser_odom"/>
    <param name="max_iterations" value="10"/>

    <param name="base_frame" value = "base_footprint"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="false" />
    <param name="publy_pose" value = "true"/>
    <param name="publy_tf" value="true"/>

    </node>

    <node pkg="clean_car_description" type="clean_car_teleop.py" name="control_node" output="screen" />
</launch>
